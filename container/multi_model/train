#!/usr/bin/env python

# This file is only needed to mount a training job for the estimator, no actual training required.
# This implementation works in File mode and makes no assumptions about the input file names.
# Input is specified as CSV with a data point in each row and the labels in the first column.

from __future__ import print_function

import json
import os
import pickle
import sys
import traceback
from ind_eac import ind_eac
import pandas as pd

# These are the paths to where SageMaker mounts interesting things in your container.
prefix = '/opt/ml/'
input_path = prefix + 'input/data'
output_path = os.path.join(prefix, 'output')
model_path = os.path.join(prefix, 'model')
param_path = os.path.join(prefix, 'input/config/hyperparameters.json')

"""
def ind_eac(inputs):
    inputs=inputs.astype('float')
    sum_dpc, aa, previous_eac = inputs[:,0], inputs[:,1], inputs[:,2]
    sum_dpc[sum_dpc>0.5]=0.5
    result = aa*sum_dpc*2+previous_eac*(1-sum_dpc*2)
    return result
"""
    
# The function to execute the training.
def train():
    print('Starting the training.')
    print(os.getcwd())
 
    # save the model
    with open(os.path.join(model_path, 'ind-eac.pkl'), 'wb') as f:
        pickle.dump(ind_eac, f)
        print('Training complete.')


if __name__ == '__main__':
    train()

    # A zero exit code causes the job to be marked a Succeeded.
    sys.exit(0)